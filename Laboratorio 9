#1
def celsius_to_fahrenheit(celsius):
    fahrenheit = (celsius * 9/5) + 32
    return fahrenheit
def fahrenheit_to_celsius(fahrenheit):
    celsius = (fahrenheit - 32) * 5/9
    return celsius
def main():
    try:
        temperatura = float(input("Ingresa la temperatura: "))
        unidad = input("Ingresa la unidad de temperatura (C o F): ").upper()
        if unidad == 'C':
            fahrenheit = celsius_to_fahrenheit(temperatura)
            print(f"{temperatura}°C equivale a {fahrenheit:.2f}°F")
        elif unidad == 'F':
            celsius = fahrenheit_to_celsius(temperatura)
            print(f"{temperatura}°F equivale a {celsius:.2f}°C")
        else:
            print("Unidad de temperatura no válida. Debe ser 'C' o 'F'.")
    except ValueError:
        print("Entrada inválida. Ingresa una temperatura numérica.")
if __name__ == "__main__":
    main()
  
#2
def suma(a, b):
    return a + b
def resta(a, b):
    return a - b
def multiplicacion(a, b):
    return a * b
def division(a, b):
    if b != 0:
        return a / b
    else:
        raise ValueError("No se puede dividir por cero.")
def main():
    try:
        num1 = float(input("Ingresa el primer número: "))
        num2 = float(input("Ingresa el segundo número: "))
        operacion = input("Ingresa la operación (+, -, *, /): ")
        if operacion == "+":
            resultado = suma(num1, num2)
        elif operacion == "-":
            resultado = resta(num1, num2)
        elif operacion == "*":
            resultado = multiplicacion(num1, num2)
        elif operacion == "/":
            resultado = division(num1, num2)
        else:
            print("Operación no válida. Las opciones son +, -, *, /")
            return
        print(f"Resultado: {resultado}")
    except ValueError:
        print("Entrada inválida. Ingresa números válidos.")
    except ZeroDivisionError as e:
        print(e)
if __name__ == "__main__":
    main()

#3
import string
import random
def generar_contrasena(longitud, incluir_mayusculas, incluir_minusculas, incluir_numeros, incluir_especiales):
    caracteres = ''
    if incluir_mayusculas:
        caracteres += string.ascii_uppercase
    if incluir_minusculas:
        caracteres += string.ascii_lowercase
    if incluir_numeros:
        caracteres += string.digits
    if incluir_especiales:
        caracteres += string.punctuation
    if caracteres == '':
        raise ValueError("Debes incluir al menos un tipo de caracter.")
    contrasena = ''.join(random.choice(caracteres) for _ in range(longitud))
    return contrasena
def main():
    try:
        longitud = int(input("Longitud de la contraseña: "))
        incluir_mayusculas = bool(input("Incluir mayúsculas (True o False): "))
        incluir_minusculas = bool(input("Incluir minúsculas (True o False): "))
        incluir_numeros = bool(input("Incluir números (True o False): "))
        incluir_especiales = bool(input("Incluir caracteres especiales (True o False): "))
        contrasena = generar_contrasena(longitud, incluir_mayusculas, incluir_minusculas, incluir_numeros, incluir_especiales)
        print(f"Contraseña generada: {contrasena}")
    except ValueError:
        print("Entrada inválida. Asegúrate de ingresar valores válidos (True/False para inclusión).")
if __name__ == "__main__":
    main()
